lockVersion: 2.0.0
id: ce3a0683-4f03-4e82-abd0-3e1359351ac2
management:
  docChecksum: 6b31c76d061a30e3528498fe40789fdb
  docVersion: 1.0.0
  speakeasyVersion: 1.486.0
  generationVersion: 2.505.0
  releaseVersion: 0.4.0
  configChecksum: 5637ea737744359074fa1b62f062d2e9
features:
  go:
    additionalDependencies: 0.1.0
    constsAndDefaults: 0.1.7
    core: 3.7.0
    defaultEnabledRetries: 0.2.0
    devContainers: 2.90.0
    envVarSecurityUsage: 0.3.2
    flattening: 2.81.1
    globalSecurity: 2.82.10
    globalSecurityCallbacks: 0.1.0
    globalSecurityFlattening: 0.1.0
    globalServerURLs: 2.82.2
    intellisenseMarkdownSupport: 0.1.0
    mockServer: 0.1.0
    responseFormat: 0.1.2
    retries: 2.83.2
    sdkHooks: 0.1.0
    tests: 0.10.5
    uploadStreams: 0.1.0
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .gitattributes
  - /models/components/apiresponse.go
  - /models/components/category.go
  - /models/components/httpmetadata.go
  - /models/components/order.go
  - /models/components/pet.go
  - /models/components/security.go
  - /models/components/tag.go
  - /models/components/user.go
  - /models/operations/addpet.go
  - /models/operations/createuser.go
  - /models/operations/createuserswithlistinput.go
  - /models/operations/deleteorder.go
  - /models/operations/deletepet.go
  - /models/operations/deleteuser.go
  - /models/operations/findpetsbystatus.go
  - /models/operations/findpetsbytags.go
  - /models/operations/getinventory.go
  - /models/operations/getorderbyid.go
  - /models/operations/getpetbyid.go
  - /models/operations/getuserbyname.go
  - /models/operations/loginuser.go
  - /models/operations/logoutuser.go
  - /models/operations/placeorder.go
  - /models/operations/updatepet.go
  - /models/operations/updateuser.go
  - /models/operations/uploadfile.go
  - /models/sdkerrors/apierrorinvalidinput.go
  - /models/sdkerrors/apierrornotfound.go
  - /models/sdkerrors/apierrorunauthorized.go
  - USAGE.md
  - docs/models/components/apiresponse.md
  - docs/models/components/category.md
  - docs/models/components/httpmetadata.md
  - docs/models/components/order.md
  - docs/models/components/orderstatus.md
  - docs/models/components/pet.md
  - docs/models/components/security.md
  - docs/models/components/status.md
  - docs/models/components/tag.md
  - docs/models/components/user.md
  - docs/models/operations/addpetresponse.md
  - docs/models/operations/createuserresponse.md
  - docs/models/operations/createuserswithlistinputresponse.md
  - docs/models/operations/deleteorderrequest.md
  - docs/models/operations/deleteorderresponse.md
  - docs/models/operations/deletepetrequest.md
  - docs/models/operations/deletepetresponse.md
  - docs/models/operations/deleteuserrequest.md
  - docs/models/operations/deleteuserresponse.md
  - docs/models/operations/findpetsbystatusrequest.md
  - docs/models/operations/findpetsbystatusresponse.md
  - docs/models/operations/findpetsbytagsrequest.md
  - docs/models/operations/findpetsbytagsresponse.md
  - docs/models/operations/getinventoryresponse.md
  - docs/models/operations/getorderbyidrequest.md
  - docs/models/operations/getorderbyidresponse.md
  - docs/models/operations/getpetbyidrequest.md
  - docs/models/operations/getpetbyidresponse.md
  - docs/models/operations/getuserbynamerequest.md
  - docs/models/operations/getuserbynameresponse.md
  - docs/models/operations/loginuserrequest.md
  - docs/models/operations/loginuserresponse.md
  - docs/models/operations/logoutuserresponse.md
  - docs/models/operations/option.md
  - docs/models/operations/placeorderresponse.md
  - docs/models/operations/status.md
  - docs/models/operations/updatepetresponse.md
  - docs/models/operations/updateuserrequest.md
  - docs/models/operations/updateuserresponse.md
  - docs/models/operations/uploadfilerequest.md
  - docs/models/operations/uploadfileresponse.md
  - docs/models/sdkerrors/apierrorinvalidinput.md
  - docs/models/sdkerrors/apierrornotfound.md
  - docs/models/sdkerrors/apierrorunauthorized.md
  - docs/sdks/pet/README.md
  - docs/sdks/petstoresdk/README.md
  - docs/sdks/store/README.md
  - docs/sdks/user/README.md
  - go.mod
  - internal/hooks/hooks.go
  - internal/utils/contenttype.go
  - internal/utils/env.go
  - internal/utils/form.go
  - internal/utils/headers.go
  - internal/utils/json.go
  - internal/utils/pathparams.go
  - internal/utils/queryparams.go
  - internal/utils/requestbody.go
  - internal/utils/retries.go
  - internal/utils/security.go
  - internal/utils/utils.go
  - models/operations/options.go
  - models/sdkerrors/sdkerror.go
  - pet.go
  - petstoresdk.go
  - retry/config.go
  - store.go
  - tests/files.go
  - tests/mockserver/Dockerfile
  - tests/mockserver/Makefile
  - tests/mockserver/README.md
  - tests/mockserver/go.mod
  - tests/mockserver/go.sum
  - tests/mockserver/internal/handler/assert/contenttype.go
  - tests/mockserver/internal/handler/assert/header.go
  - tests/mockserver/internal/handler/assert/parameter.go
  - tests/mockserver/internal/handler/assert/pointer.go
  - tests/mockserver/internal/handler/assert/security.go
  - tests/mockserver/internal/handler/doc.go
  - tests/mockserver/internal/handler/generated_handler.go
  - tests/mockserver/internal/handler/generated_handlers.go
  - tests/mockserver/internal/handler/pathdeletepetpetid.go
  - tests/mockserver/internal/handler/pathdeletestoreorderorderid.go
  - tests/mockserver/internal/handler/pathdeleteuserusername.go
  - tests/mockserver/internal/handler/pathgetpetfindbystatus.go
  - tests/mockserver/internal/handler/pathgetpetfindbytags.go
  - tests/mockserver/internal/handler/pathgetpetpetid.go
  - tests/mockserver/internal/handler/pathgetstoreinventory.go
  - tests/mockserver/internal/handler/pathgetstoreorderorderid.go
  - tests/mockserver/internal/handler/pathgetuserlogin.go
  - tests/mockserver/internal/handler/pathgetuserlogout.go
  - tests/mockserver/internal/handler/pathgetuserusername.go
  - tests/mockserver/internal/handler/pathpostpet.go
  - tests/mockserver/internal/handler/pathpoststoreorder.go
  - tests/mockserver/internal/handler/pathpostuser.go
  - tests/mockserver/internal/handler/pathpostusercreatewithlist.go
  - tests/mockserver/internal/handler/pathputpet.go
  - tests/mockserver/internal/handler/pathputuserusername.go
  - tests/mockserver/internal/handler/values/files.go
  - tests/mockserver/internal/logging/doc.go
  - tests/mockserver/internal/logging/formats.go
  - tests/mockserver/internal/logging/http_file.go
  - tests/mockserver/internal/logging/http_logger.go
  - tests/mockserver/internal/logging/levels.go
  - tests/mockserver/internal/logging/logger.go
  - tests/mockserver/internal/logging/oas_operation.go
  - tests/mockserver/internal/logging/oas_operation_call.go
  - tests/mockserver/internal/sdk/models/components/apiresponse.go
  - tests/mockserver/internal/sdk/models/components/category.go
  - tests/mockserver/internal/sdk/models/components/httpmetadata.go
  - tests/mockserver/internal/sdk/models/components/order.go
  - tests/mockserver/internal/sdk/models/components/pet.go
  - tests/mockserver/internal/sdk/models/components/security.go
  - tests/mockserver/internal/sdk/models/components/tag.go
  - tests/mockserver/internal/sdk/models/components/user.go
  - tests/mockserver/internal/sdk/models/operations/addpet.go
  - tests/mockserver/internal/sdk/models/operations/createuser.go
  - tests/mockserver/internal/sdk/models/operations/createuserswithlistinput.go
  - tests/mockserver/internal/sdk/models/operations/deleteorder.go
  - tests/mockserver/internal/sdk/models/operations/deletepet.go
  - tests/mockserver/internal/sdk/models/operations/deleteuser.go
  - tests/mockserver/internal/sdk/models/operations/findpetsbystatus.go
  - tests/mockserver/internal/sdk/models/operations/findpetsbytags.go
  - tests/mockserver/internal/sdk/models/operations/getinventory.go
  - tests/mockserver/internal/sdk/models/operations/getorderbyid.go
  - tests/mockserver/internal/sdk/models/operations/getpetbyid.go
  - tests/mockserver/internal/sdk/models/operations/getuserbyname.go
  - tests/mockserver/internal/sdk/models/operations/loginuser.go
  - tests/mockserver/internal/sdk/models/operations/logoutuser.go
  - tests/mockserver/internal/sdk/models/operations/placeorder.go
  - tests/mockserver/internal/sdk/models/operations/updatepet.go
  - tests/mockserver/internal/sdk/models/operations/updateuser.go
  - tests/mockserver/internal/sdk/models/operations/uploadfile.go
  - tests/mockserver/internal/sdk/models/sdkerrors/apierrorinvalidinput.go
  - tests/mockserver/internal/sdk/models/sdkerrors/apierrornotfound.go
  - tests/mockserver/internal/sdk/models/sdkerrors/apierrorunauthorized.go
  - tests/mockserver/internal/sdk/types/bigint.go
  - tests/mockserver/internal/sdk/types/date.go
  - tests/mockserver/internal/sdk/types/datetime.go
  - tests/mockserver/internal/sdk/types/decimal.go
  - tests/mockserver/internal/sdk/types/pointers.go
  - tests/mockserver/internal/sdk/utils/json.go
  - tests/mockserver/internal/sdk/utils/reflect.go
  - tests/mockserver/internal/sdk/utils/sort.go
  - tests/mockserver/internal/server/doc.go
  - tests/mockserver/internal/server/generated_handlers.go
  - tests/mockserver/internal/server/internal_handlers.go
  - tests/mockserver/internal/server/server.go
  - tests/mockserver/internal/server/server_option.go
  - tests/mockserver/internal/server/templates/log/index.html.tmpl
  - tests/mockserver/internal/server/templates/log/operation.html.tmpl
  - tests/mockserver/internal/server/templates/log/style.css.tmpl
  - tests/mockserver/internal/tracking/requesttracker.go
  - tests/mockserver/main.go
  - tests/pet_test.go
  - tests/store_test.go
  - tests/testclient.go
  - tests/user_test.go
  - types/bigint.go
  - types/date.go
  - types/datetime.go
  - types/decimal.go
  - types/pointers.go
  - user.go
examples:
  updatePet:
    speakeasy-default-update-pet:
      requestBody:
        application/json: {"id": 10, "name": "doggie", "category": {"id": 1, "name": "Dogs"}, "photoUrls": ["<value>", "<value>"]}
      responses:
        "200":
          application/json: {"id": 10, "name": "doggie", "category": {"id": 1, "name": "Dogs"}, "photoUrls": ["<value>"]}
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  addPet:
    fido:
      requestBody:
        application/json: {"name": "Fido", "photoUrls": ["https://www.example.com/fido.jpg"], "status": "available"}
      responses:
        "200":
          application/json: {"id": 1, "name": "Fido", "photoUrls": ["https://www.example.com/fido.jpg"], "status": "available"}
    rover:
      requestBody:
        application/json: {"name": "Rover", "photoUrls": ["https://www.example.com/rover1.jpg", "https://www.example.com/rover2.jpg"], "status": "pending"}
      responses:
        "200":
          application/json: {"id": 2, "name": "Rover", "photoUrls": ["https://www.example.com/rover1.jpg", "https://www.example.com/rover2.jpg"], "status": "pending"}
  findPetsByStatus:
    speakeasy-default-find-pets-by-status:
      parameters:
        query:
          status: "available"
      responses:
        "200":
          application/json: [{"id": 10, "name": "doggie", "category": {"id": 1, "name": "Dogs"}, "photoUrls": []}, {"id": 10, "name": "doggie", "category": {"id": 1, "name": "Dogs"}, "photoUrls": ["<value>"]}, {"id": 10, "name": "doggie", "category": {"id": 1, "name": "Dogs"}, "photoUrls": []}]
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  findPetsByTags:
    speakeasy-default-find-pets-by-tags:
      responses:
        "200":
          application/json: [{"id": 10, "name": "doggie", "category": {"id": 1, "name": "Dogs"}, "photoUrls": ["<value>", "<value>", "<value>"]}]
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  getPetById:
    speakeasy-default-get-pet-by-id:
      parameters:
        path:
          petId: 504151
      responses:
        "200":
          application/json: {"id": 10, "name": "doggie", "category": {"id": 1, "name": "Dogs"}, "photoUrls": []}
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  deletePet:
    speakeasy-default-delete-pet:
      parameters:
        path:
          petId: 441876
        header: {}
      responses:
        "200":
          application/json: {"id": 10, "name": "doggie", "category": {"id": 1, "name": "Dogs"}, "photoUrls": ["<value>"]}
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  uploadFile:
    speakeasy-default-upload-file:
      parameters:
        path:
          petId: 565380
        query: {}
      responses:
        "200":
          application/json: {}
  getInventory:
    speakeasy-default-get-inventory:
      responses:
        "200":
          application/json: {"key": 373538, "key1": 961069}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  placeOrder:
    speakeasy-default-place-order:
      requestBody:
        application/json: {"id": 10, "petId": 198772, "quantity": 7, "status": "approved"}
      responses:
        "200":
          application/json: {"id": 10, "petId": 198772, "quantity": 7, "status": "approved"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  getOrderById:
    speakeasy-default-get-order-by-id:
      parameters:
        path:
          orderId: 614993
      responses:
        "200":
          application/json: {"id": 10, "petId": 198772, "quantity": 7, "status": "approved"}
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  deleteOrder:
    speakeasy-default-delete-order:
      parameters:
        path:
          orderId: 127902
      responses:
        "200":
          application/json: {"id": 10, "petId": 198772, "quantity": 7, "status": "approved"}
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  createUser:
    speakeasy-default-create-user:
      requestBody:
        application/json: {"id": 10, "username": "theUser", "firstName": "John", "lastName": "James", "email": "john@email.com", "password": "12345", "phone": "12345", "userStatus": 1}
      responses:
        "200":
          application/json: {"id": 10, "username": "theUser", "firstName": "John", "lastName": "James", "email": "john@email.com", "password": "12345", "phone": "12345", "userStatus": 1}
  createUsersWithListInput:
    speakeasy-default-create-users-with-list-input:
      requestBody:
        application/json: [{"id": 10, "username": "theUser", "firstName": "John", "lastName": "James", "email": "john@email.com", "password": "12345", "phone": "12345", "userStatus": 1}]
      responses:
        "200":
          application/json: {"id": 10, "username": "theUser", "firstName": "John", "lastName": "James", "email": "john@email.com", "password": "12345", "phone": "12345", "userStatus": 1}
  loginUser:
    speakeasy-default-login-user:
      responses:
        "200":
          application/json: "<value>"
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  logoutUser: {}
  getUserByName:
    speakeasy-default-get-user-by-name:
      parameters:
        path:
          username: "Zachery_Lubowitz15"
      responses:
        "200":
          application/json: {"id": 10, "username": "theUser", "firstName": "John", "lastName": "James", "email": "john@email.com", "password": "12345", "phone": "12345", "userStatus": 1}
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  updateUser:
    speakeasy-default-update-user:
      parameters:
        path:
          username: "Dandre_Hand41"
      requestBody:
        application/json: {"id": 10, "username": "theUser", "firstName": "John", "lastName": "James", "email": "john@email.com", "password": "12345", "phone": "12345", "userStatus": 1}
  deleteUser:
    speakeasy-default-delete-user:
      parameters:
        path:
          username: "Demetris_Schmitt"
      responses:
        "200":
          application/json: {"id": 10, "username": "theUser", "firstName": "John", "lastName": "James", "email": "john@email.com", "password": "12345", "phone": "12345", "userStatus": 1}
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
examplesVersion: 1.0.0
generatedTests:
  findPetsByStatus: "2024-12-10T08:16:54-05:00"
  findPetsByTags: "2024-12-10T08:16:54-05:00"
  getPetById: "2024-12-10T08:16:54-05:00"
  deletePet: "2024-12-10T08:16:54-05:00"
  getInventory: "2024-12-10T08:16:54-05:00"
  placeOrder: "2024-12-10T08:16:54-05:00"
  getOrderById: "2024-12-10T08:16:54-05:00"
  deleteOrder: "2024-12-10T08:16:54-05:00"
  createUser: "2024-12-10T08:16:54-05:00"
  createUsersWithListInput: "2024-12-10T08:16:54-05:00"
  loginUser: "2024-12-10T08:16:54-05:00"
  logoutUser: "2024-12-10T08:16:54-05:00"
  getUserByName: "2024-12-10T08:16:54-05:00"
  updateUser: "2024-12-10T08:16:54-05:00"
  deleteUser: "2024-12-10T08:16:54-05:00"
  updatePet: "2024-12-10T08:30:37-05:00"
  addPet: "2024-12-10T08:30:37-05:00"
